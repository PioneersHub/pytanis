# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Publish

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    branches:
      - main
  pull_request:
      branches:
        - main

concurrency:
  group: build-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  pure-python-wheel:
    name: Build a pure Python wheel
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          # Fetch all tags
          fetch-depth: 0
          fetch-tags: true

      - name: üîç Debug Git Tags and Hatch
        run: |
          echo "Git ref: $GITHUB_REF"
          echo "Git commit: $(git rev-parse HEAD)"
          echo "Available Git tags:"
          git tag --sort=-creatordate | head -n 5

          echo "Nearest tag for current commit:"
          git describe --tags --always || echo "‚ö†Ô∏è No tag found for current commit"

          echo "HATCH_BUILD_VERSION: $HATCH_BUILD_VERSION"
          VERSION_RAW=$(git describe --tags --always)
          VERSION_SAFE=$(echo "$VERSION_RAW" | sed -E 's/^v//' | sed -E 's/-([0-9]+)-g/\.post0.dev\1+g/')
          export HATCH_BUILD_VERSION="$VERSION_SAFE"
          echo "HATCH_BUILD_VERSION: $HATCH_BUILD_VERSION"

      - name: Install Hatch & pre-commit
        run: pip install --upgrade --pre hatch pre-commit

      - name: Initialise default environment
        run: hatch run python --version

      - name: Build distribution
        run: hatch build

      - uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: dist/*
          if-no-files-found: error

  publish:
    name: Publish on PyPI
    needs:
      - pure-python-wheel
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    environment: pypi
    permissions:
      id-token: write  # REQUIRED for OIDC trusted publishing
      contents: read

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: dist

      - name: List distribution files
        run: |
          echo "Distribution files to be uploaded:"
          ls -la dist/

      - name: Debug OIDC Context
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "=== Publishing Context ==="
          echo "Repository: ${{ github.repository }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Ref: ${{ github.ref }}"
          echo "Tag: ${{ github.ref_name }}"
          echo "Environment: ${{ github.deployment_environment }}"

          # Check OIDC token availability
          if [ -n "$ACTIONS_ID_TOKEN_REQUEST_TOKEN" ]; then
            echo "‚úÖ OIDC token is available"
          else
            echo "‚ùå OIDC token is NOT available"
            exit 1
          fi

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          verbose: true
          print-hash: true
